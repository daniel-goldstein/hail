apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-envoy-config
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 443
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: AUTO
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
{% for service in subdomains %}
                  - name: {{ service }}
                    domains:
                      - {{ service }}.{{ global.domain }}
                    routes:
                      - match:
                          prefix: "/"
                        route:
                          timeout: 0s
                          cluster: {{ service }}
{% endfor %}
                  - name: internal
                    domains:
                      - internal.{{ global.domain }}
                    routes:
{% for namespace in internal_namespaces %}
{% for service in subdomains %}
                      - match:
                          prefix: "/{{ namespace }}/{{ service }}"
                        route:
                          timeout: 0s
                          cluster: {{ namespace }}-{{ service }}
{% endfor %}
{% endfor %}
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                - certificate_chain:
                    filename: /etc/letsencrypt/fullchain.pem
                  private_key:
                    filename: /etc/letsencrypt/privkey.pem
      clusters:
{% for service in subdomains %}
      - name: {{ service }}
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: {{ service }}
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ service }}.default.svc.cluster.local
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              tls_certificates:
              - certificate_chain:
                  filename: /ssl-config/gateway-cert.pem
                private_key:
                  filename: /ssl-config/gateway-key.pem
              validation_context:
                trusted_ca:
                  filename: /ssl-config/gateway-outgoing.pem
{% endfor %}
{% for namespace in internal_namespaces %}
{% for service in subdomains %}
      - name: {{ namespace }}-{{ service }}
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: {{ namespace }}-{{ service }}
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ service }}.{{ namespace }}.svc.cluster.local
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              tls_certificates:
              - certificate_chain:
                  filename: /ssl-config/gateway-cert.pem
                private_key:
                  filename: /ssl-config/gateway-key.pem
              validation_context:
                trusted_ca:
                  filename: /ssl-config/gateway-outgoing.pem
{% endfor %}
{% endfor %}
    admin:
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 8001
    layered_runtime:
      layers:
      - name: static_layer_0
        static_layer:
          envoy:
            resource_limits:
              listener:
                example_listener_name:
                  connection_limit: 10000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
  labels:
    app: gateway
    hail.is/sha: "{{ code.sha }}"
spec:
  selector:
    matchLabels:
      app: gateway
  replicas: 3
  template:
    metadata:
      labels:
        app: gateway
        hail.is/sha: "{{ code.sha }}"
    spec:
      priorityClassName: infrastructure
      nodeSelector:
        preemptible: "true"
      tolerations:
       - key: preemptible
         value: "true"
       - key: "kubernetes.azure.com/scalesetpriority"
         value: "spot"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - gateway
              topologyKey: "kubernetes.io/hostname"
      containers:
       - name: gateway
         image: "{{ global.docker_prefix }}/envoy:v1.22.3"
         command:
           - /usr/local/bin/envoy
           - --config-path
           - /etc/envoy/envoy.yaml
           - --concurrency
           - "2"
         resources:
           requests:
             cpu: "20m"
             memory: "20M"
           limits:
             cpu: "1"
             memory: "1G"
         ports:
          - containerPort: 80
          - containerPort: 443
         volumeMounts:
          - mountPath: /etc/letsencrypt
            name: letsencrypt-config
          - name: ssl-config-gateway
            mountPath: /ssl-config
            readOnly: true
          - mountPath: /etc/envoy
            name: gateway-envoy-config
            readOnly: true
         env:
         - name: ENVOY_UID
           value: "0"
      volumes:
        - name: letsencrypt-config
          secret:
            secretName: letsencrypt-config
        - name: ssl-config-gateway
          secret:
            optional: false
            secretName: ssl-config-gateway
        - name: gateway-envoy-config
          configMap:
            name: gateway-envoy-config
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: gateway
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gateway
  minReplicas: 3
  maxReplicas: 10
  metrics:
   - type: Resource
     resource:
       name: cpu
       targetAverageUtilization: 2500
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gateway
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: gateway
